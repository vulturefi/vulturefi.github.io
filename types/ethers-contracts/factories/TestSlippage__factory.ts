/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestSlippage, TestSlippageInterface } from "../TestSlippage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "xThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "testSlippage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061031c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063561462d414610030575b600080fd5b61004361003e3660046101b9565b610055565b60405190815260200160405180910390f35b60006100648686868686610070565b90505b95945050505050565b60008282101561008b576100848285610223565b9050610067565b6100846b033b2e3c9fd0803ce8000000670de0b6b3a76400006100c388826100b3858961023a565b6100bd91906102a6565b906100de565b6100cd919061023a565b6100d791906102a6565b879061015a565b60006100eb6002836102ba565b610101576b033b2e3c9fd0803ce8000000610103565b825b90506101106002836102a6565b91505b8115610154576101238384610195565b92506101306002836102ba565b156101425761013f8184610195565b90505b61014d6002836102a6565b9150610113565b92915050565b6000816101686002826102a6565b61017a670de0b6b3a76400008661023a565b61018491906102ce565b61018e91906102a6565b9392505050565b60006b033b2e3c9fd0803ce80000006101af6002826102a6565b61017a848661023a565b600080600080600060a086880312156101d157600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610235576102356101f4565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610272576102726101f4565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826102b5576102b5610277565b500490565b6000826102c9576102c9610277565b500690565b600082198211156102e1576102e16101f4565b50019056fea2646970667358221220ff13514ec9e8fbc7921e7a324b2e2cb0bccc11e95c9b89c167aa32ddfcfabc3564736f6c63430008090033";

export class TestSlippage__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestSlippage> {
    return super.deploy(overrides || {}) as Promise<TestSlippage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestSlippage {
    return super.attach(address) as TestSlippage;
  }
  connect(signer: Signer): TestSlippage__factory {
    return super.connect(signer) as TestSlippage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestSlippageInterface {
    return new utils.Interface(_abi) as TestSlippageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestSlippage {
    return new Contract(address, _abi, signerOrProvider) as TestSlippage;
  }
}
