/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SafeERC20, SafeERC20Interface } from "../SafeERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "IERC20",
      },
    ],
    name: "safeDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61022f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806372a58ae11461003a575b600080fd5b61004d61004836600461015e565b610063565b60405160ff909116815260200160405180910390f35b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f313ce5670000000000000000000000000000000000000000000000000000000017905290516000918291829173ffffffffffffffffffffffffffffffffffffffff8616916100e4919061019b565b600060405180830381855afa9150503d806000811461011f576040519150601f19603f3d011682016040523d82523d6000602084013e610124565b606091505b5091509150818015610137575080516020145b610142576012610156565b8080602001905181019061015691906101d6565b949350505050565b60006020828403121561017057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461019457600080fd5b9392505050565b6000825160005b818110156101bc57602081860181015185830152016101a2565b818111156101cb576000828501525b509190910192915050565b6000602082840312156101e857600080fd5b815160ff8116811461019457600080fdfea264697066735822122045f36ad3cb49cff087102ee383056d25784247673bd9f592981c9ac10251691464736f6c63430008090033";

export class SafeERC20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafeERC20> {
    return super.deploy(overrides || {}) as Promise<SafeERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeERC20 {
    return super.attach(address) as SafeERC20;
  }
  connect(signer: Signer): SafeERC20__factory {
    return super.connect(signer) as SafeERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeERC20Interface {
    return new utils.Interface(_abi) as SafeERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeERC20 {
    return new Contract(address, _abi, signerOrProvider) as SafeERC20;
  }
}
