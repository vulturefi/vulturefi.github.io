/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleRewarder,
  SimpleRewarderInterface,
} from "../SimpleRewarder";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenPerSec",
        type: "uint256",
      },
      {
        internalType: "contract IMasterChefJoe",
        name: "_MCJ",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isNative",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OnReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "RewardRateUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "MCJ",
    outputs: [
      {
        internalType: "contract IMasterChefJoe",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isNative",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lpAmount",
        type: "uint256",
      },
    ],
    name: "onJoeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "pending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "accTokenPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenPerSec",
        type: "uint256",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPerSec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accTokenPerShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct SimpleRewarder.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001a6638038062001a66833981016040819052620000359162000265565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36200008a856200024660201b620010f71760201c565b620000f75760405162461bcd60e51b815260206004820152603260248201527f636f6e7374727563746f723a2072657761726420746f6b656e206d7573742062604482015271194818481d985b1a590818dbdb9d1c9858dd60721b60648201526084015b60405180910390fd5b6200010d846200024660201b620010f71760201c565b620001725760405162461bcd60e51b815260206004820152602e60248201527f636f6e7374727563746f723a204c5020746f6b656e206d75737420626520612060448201526d1d985b1a590818dbdb9d1c9858dd60921b6064820152608401620000ee565b62000188826200024660201b620010f71760201c565b620001fc5760405162461bcd60e51b815260206004820152603360248201527f636f6e7374727563746f723a204d6173746572436865664a6f65206d7573742060448201527f626520612076616c696420636f6e7472616374000000000000000000000000006064820152608401620000ee565b6001600160a01b0394851660805292841660a05260059190915590911660e052151560c05260408051808201909152600080825242602092909201829052600255600355620002dd565b3b151590565b6001600160a01b03811681146200026257600080fd5b50565b600080600080600060a086880312156200027e57600080fd5b85516200028b816200024c565b60208701519095506200029e816200024c565b604087015160608801519195509350620002b8816200024c565b60808701519092508015158114620002cf57600080fd5b809150509295509295909350565b60805160a05160c05160e0516116ed62000379600039600081816101c00152818161060401528181610c720152610fd60152600081816102a10152818161075e01528181610b1b0152610e3f01526000818161026d01528181610ca401526110010152600081816103d9015281816107b80152818161086b015281816108b101528181610b7201528181610eae0152610f3f01526116ed6000f3fe6080604052600436106101125760003560e01c806373cfc6b2116100a5578063c031a66f11610074578063e30c397811610059578063e30c39781461036a578063e3161ddd14610397578063f7c618c1146103c757600080fd5b8063c031a66f14610335578063db2e21bc1461035557600080fd5b806373cfc6b21461028f5780638da5cb5b146102d35780639e447fc614610300578063b69ef8a81461032057600080fd5b80634e71e0c8116100e15780634e71e0c81461020757806350fd1f3e1461021c5780635a2f3d09146102405780635fcbd2851461025b57600080fd5b8063078dfbe71461011e5780631959a002146101405780631a7af8b01461018e57806330628e15146101ae57600080fd5b3661011957005b600080fd5b34801561012a57600080fd5b5061013e6101393660046114c9565b6103fb565b005b34801561014c57600080fd5b5061017461015b366004611512565b6004602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b34801561019a57600080fd5b5061013e6101a936600461152d565b6105ec565b3480156101ba57600080fd5b506101e27f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610185565b34801561021357600080fd5b5061013e610932565b34801561022857600080fd5b5061023260055481565b604051908152602001610185565b34801561024c57600080fd5b50600254600354610174919082565b34801561026757600080fd5b506101e27f000000000000000000000000000000000000000000000000000000000000000081565b34801561029b57600080fd5b506102c37f000000000000000000000000000000000000000000000000000000000000000081565b6040519015158152602001610185565b3480156102df57600080fd5b506000546101e29073ffffffffffffffffffffffffffffffffffffffff1681565b34801561030c57600080fd5b5061013e61031b366004611557565b610a48565b34801561032c57600080fd5b50610232610b17565b34801561034157600080fd5b50610232610350366004611512565b610c09565b34801561036157600080fd5b5061013e610dbc565b34801561037657600080fd5b506001546101e29073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103a357600080fd5b506103ac610f68565b60408051825181526020928301519281019290925201610185565b3480156103d357600080fd5b506101e27f000000000000000000000000000000000000000000000000000000000000000081565b60005473ffffffffffffffffffffffffffffffffffffffff163314610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b81156105a55773ffffffffffffffffffffffffffffffffffffffff83161515806104a85750805b61050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152606401610478565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600180549091169055505050565b6001805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146106b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f6f6e6c794d434a3a206f6e6c79204d6173746572436865664a6f65202063616e60448201527f2063616c6c20746869732066756e6374696f6e000000000000000000000000006064820152608401610478565b6106b9610f68565b50604080518082018252600254815260035460208083019190915273ffffffffffffffffffffffffffffffffffffffff8516600090815260049091529182206001810154825182549394929361072a929164e8d4a510009161071a916110fd565b610724919061159f565b906111bb565b825485845584519192509064e8d4a51000906107479087906110fd565b610751919061159f565b600184015580156108da577f000000000000000000000000000000000000000000000000000000000000000015610787576108da565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561080f57600080fd5b505afa158015610823573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084791906115da565b9050808311156108975761089273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168883611231565b6108d8565b6108d873ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168885611231565b505b8573ffffffffffffffffffffffffffffffffffffffff167fd1072bb52c3131d0c96197b73fb8a45637e30f8b6664fc142310cc9b242859b48360405161092291815260200190565b60405180910390a2505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff163381146109b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152606401610478565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ac9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610478565b610ad1610f68565b50600580549082905560408051828152602081018490527fc390a98ace15a7bb6bab611eedfdbb2685043b241a869420043cdfb23ccfee50910160405180910390a15050565b60007f000000000000000000000000000000000000000000000000000000000000000015610b4457504790565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015610bc957600080fd5b505afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0191906115da565b905090565b90565b604080518082018252600254815260035460208083019190915273ffffffffffffffffffffffffffffffffffffffff8481166000908152600492839052848120845195517f70a082310000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000084169481019490945290949092909185917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b158015610ce857600080fd5b505afa158015610cfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2091906115da565b9050836020015142118015610d3457508015155b15610d95576000610d528560200151426111bb90919063ffffffff16565b90506000610d6b600554836110fd90919063ffffffff16565b9050610d90610d8984610d838464e8d4a510006110fd565b906113a1565b8590611416565b935050505b60018301548354610db2919064e8d4a510009061071a90866110fd565b9695505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610478565b7f000000000000000000000000000000000000000000000000000000000000000015610e6557565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152610f6690339073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610ef057600080fd5b505afa158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2891906115da565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169190611231565b565b604080518082018252600080825260209182015281518083019092526002548252600354908201819052421115610c06576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b15801561104557600080fd5b505afa158015611059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107d91906115da565b905080156110e357600061109e8360200151426111bb90919063ffffffff16565b905060006110b7600554836110fd90919063ffffffff16565b90506110de836110cc8364e8d4a510006110fd565b6110d6919061159f565b855190611416565b845250505b504260208201819052815160025560035590565b3b151590565b60008261110c575060006111b5565b600061111883856115f3565b905082611125858361159f565b146111b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610478565b90505b92915050565b600082821115611227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610478565b6111b28284611630565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916112c89190611647565b6000604051808303816000865af19150503d8060008114611305576040519150601f19603f3d011682016040523d82523d6000602084013e61130a565b606091505b50915091508180156113345750805115806113345750808060200190518101906113349190611682565b61139a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5361666545524332303a205472616e73666572206661696c65640000000000006044820152606401610478565b5050505050565b600080821161140c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f0000000000006044820152606401610478565b6111b2828461159f565b600080611423838561169f565b9050838110156111b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610478565b803573ffffffffffffffffffffffffffffffffffffffff811681146114b357600080fd5b919050565b80151581146114c657600080fd5b50565b6000806000606084860312156114de57600080fd5b6114e78461148f565b925060208401356114f7816114b8565b91506040840135611507816114b8565b809150509250925092565b60006020828403121561152457600080fd5b6111b28261148f565b6000806040838503121561154057600080fd5b6115498361148f565b946020939093013593505050565b60006020828403121561156957600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000826115d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000602082840312156115ec57600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561162b5761162b611570565b500290565b60008282101561164257611642611570565b500390565b6000825160005b81811015611668576020818601810151858301520161164e565b81811115611677576000828501525b509190910192915050565b60006020828403121561169457600080fd5b81516111b2816114b8565b600082198211156116b2576116b2611570565b50019056fea2646970667358221220cd55396c6a0af5459de8274a03d6832e99c7017fc3746030403a8e38fd03029f64736f6c63430008090033";

export class SimpleRewarder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardToken: string,
    _lpToken: string,
    _tokenPerSec: BigNumberish,
    _MCJ: string,
    _isNative: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleRewarder> {
    return super.deploy(
      _rewardToken,
      _lpToken,
      _tokenPerSec,
      _MCJ,
      _isNative,
      overrides || {}
    ) as Promise<SimpleRewarder>;
  }
  getDeployTransaction(
    _rewardToken: string,
    _lpToken: string,
    _tokenPerSec: BigNumberish,
    _MCJ: string,
    _isNative: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardToken,
      _lpToken,
      _tokenPerSec,
      _MCJ,
      _isNative,
      overrides || {}
    );
  }
  attach(address: string): SimpleRewarder {
    return super.attach(address) as SimpleRewarder;
  }
  connect(signer: Signer): SimpleRewarder__factory {
    return super.connect(signer) as SimpleRewarder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleRewarderInterface {
    return new utils.Interface(_abi) as SimpleRewarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleRewarder {
    return new Contract(address, _abi, signerOrProvider) as SimpleRewarder;
  }
}
