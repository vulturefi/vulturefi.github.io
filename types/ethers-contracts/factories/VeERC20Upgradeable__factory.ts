/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VeERC20Upgradeable,
  VeERC20UpgradeableInterface,
} from "../VeERC20Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102c4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063313ce56711610050578063313ce5671461009c57806370a08231146100ab57806395d89b41146100e157600080fd5b806306fdde031461006c57806318160ddd1461008a575b600080fd5b6100746100e9565b604051610081919061018a565b60405180910390f35b6035545b604051908152602001610081565b60405160128152602001610081565b61008e6100b93660046101fd565b73ffffffffffffffffffffffffffffffffffffffff1660009081526033602052604090205490565b61007461017b565b6060603680546100f89061023a565b80601f01602080910402602001604051908101604052809291908181526020018280546101249061023a565b80156101715780601f1061014657610100808354040283529160200191610171565b820191906000526020600020905b81548152906001019060200180831161015457829003601f168201915b5050505050905090565b6060603780546100f89061023a565b600060208083528351808285015260005b818110156101b75785810183015185820160400152820161019b565b818111156101c9576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60006020828403121561020f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461023357600080fd5b9392505050565b600181811c9082168061024e57607f821691505b60208210811415610288577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea264697066735822122070aff81df8eb5bf115b6d5d2370fb7210c26b4889e3abb2870680a51e987591964736f6c63430008090033";

export class VeERC20Upgradeable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VeERC20Upgradeable> {
    return super.deploy(overrides || {}) as Promise<VeERC20Upgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VeERC20Upgradeable {
    return super.attach(address) as VeERC20Upgradeable;
  }
  connect(signer: Signer): VeERC20Upgradeable__factory {
    return super.connect(signer) as VeERC20Upgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeERC20UpgradeableInterface {
    return new utils.Interface(_abi) as VeERC20UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VeERC20Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as VeERC20Upgradeable;
  }
}
