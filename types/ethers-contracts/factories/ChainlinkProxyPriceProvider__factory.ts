/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainlinkProxyPriceProvider,
  ChainlinkProxyPriceProviderInterface,
} from "../ChainlinkProxyPriceProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "sources",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "source",
        type: "address",
      },
    ],
    name: "AssetSourceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetPriceReciprocal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "getAssetsPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getSourceOfAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "sources",
        type: "address[]",
      },
    ],
    name: "setAssetSources",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001320380380620013208339810160408190526200003491620003ec565b6200003f3362000053565b6200004b8282620000a3565b5050620004c2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051825114620000fa5760405162461bcd60e51b815260206004820152601a60248201527f494e434f4e53495354454e545f504152414d535f4c454e47544800000000000060448201526064015b60405180910390fd5b60005b825181101562000307578181815181106200011c576200011c62000456565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200015d57600080fd5b505afa15801562000172573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200019891906200046c565b60ff16600814620001f85760405162461bcd60e51b815260206004820152602360248201527f66656564206d7573742068617665203820646563696d616c732070726563697360448201526234b7b760e91b6064820152608401620000f1565b8181815181106200020d576200020d62000456565b6020026020010151600160008584815181106200022e576200022e62000456565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508181815181106200028f576200028f62000456565b60200260200101516001600160a01b0316838281518110620002b557620002b562000456565b60200260200101516001600160a01b03167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a380620002fe8162000498565b915050620000fd565b505050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200033a57600080fd5b919050565b600082601f8301126200035157600080fd5b815160206001600160401b03808311156200037057620003706200030c565b8260051b604051601f19603f830116810181811084821117156200039857620003986200030c565b604052938452858101830193838101925087851115620003b757600080fd5b83870191505b84821015620003e157620003d18262000322565b83529183019190830190620003bd565b979650505050505050565b600080604083850312156200040057600080fd5b82516001600160401b03808211156200041857600080fd5b62000426868387016200033f565b935060208501519150808211156200043d57600080fd5b506200044c858286016200033f565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200047f57600080fd5b815160ff811681146200049157600080fd5b9392505050565b6000600019821415620004bb57634e487b7160e01b600052601160045260246000fd5b5060010190565b610e4e80620004d26000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639d23d9f21161005b5780639d23d9f214610135578063abfd531014610155578063b3596f0714610168578063f2fde38b1461017b57600080fd5b80632d664ca21461008d578063715018a6146100b35780638da5cb5b146100bd57806392bf2be0146100fc575b600080fd5b6100a061009b366004610abc565b61018e565b6040519081526020015b60405180910390f35b6100bb61021f565b005b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100aa565b6100d761010a366004610abc565b73ffffffffffffffffffffffffffffffffffffffff9081166000908152600160205260409020541690565b610148610143366004610b3e565b6102ac565b6040516100aa9190610b80565b6100bb610163366004610bc4565b610361565b6100a0610176366004610abc565b610455565b6100bb610189366004610abc565b6105d6565b60008061019a83610455565b905060006101a782610706565b905060008111610218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f50524943450000000000000000000000000000000000000060448201526064015b60405180910390fd5b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020f565b6102aa6000610720565b565b606060008267ffffffffffffffff8111156102c9576102c9610c30565b6040519080825280602002602001820160405280156102f2578160200160208202803683370190505b50905060005b838110156103595761032a85858381811061031557610315610c5f565b90506020020160208101906101769190610abc565b82828151811061033c5761033c610c5f565b60209081029190910101528061035181610cbd565b9150506102f8565b509392505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020f565b61044f8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080880282810182019093528782529093508792508691829185019084908082843760009201919091525061079592505050565b50505050565b73ffffffffffffffffffffffffffffffffffffffff808216600090815260016020526040812054909116806104e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f534f555243455f49535f4d495353494e47000000000000000000000000000000604482015260640161020f565b60008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105669190610d15565b50505091505060008113610218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f494e56414c49445f505249434500000000000000000000000000000000000000604482015260640161020f565b60005473ffffffffffffffffffffffffffffffffffffffff163314610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020f565b73ffffffffffffffffffffffffffffffffffffffff81166106fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161020f565b61070381610720565b50565b600061071a670de0b6b3a764000083610a88565b92915050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051825114610800576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604482015260640161020f565b60005b8251811015610a835781818151811061081e5761081e610c5f565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561086b57600080fd5b505afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190610d65565b60ff16600814610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f66656564206d7573742068617665203820646563696d616c732070726563697360448201527f696f6e0000000000000000000000000000000000000000000000000000000000606482015260840161020f565b81818151811061094757610947610c5f565b60200260200101516001600085848151811061096557610965610c5f565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181815181106109f7576109f7610c5f565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16838281518110610a2757610a27610c5f565b602002602001015173ffffffffffffffffffffffffffffffffffffffff167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a380610a7b81610cbd565b915050610803565b505050565b600081610a96600282610d88565b610aa8670de0b6b3a764000086610dc3565b610ab29190610e00565b6102189190610d88565b600060208284031215610ace57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461021857600080fd5b60008083601f840112610b0457600080fd5b50813567ffffffffffffffff811115610b1c57600080fd5b6020830191508360208260051b8501011115610b3757600080fd5b9250929050565b60008060208385031215610b5157600080fd5b823567ffffffffffffffff811115610b6857600080fd5b610b7485828601610af2565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015610bb857835183529284019291840191600101610b9c565b50909695505050505050565b60008060008060408587031215610bda57600080fd5b843567ffffffffffffffff80821115610bf257600080fd5b610bfe88838901610af2565b90965094506020870135915080821115610c1757600080fd5b50610c2487828801610af2565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cef57610cef610c8e565b5060010190565b805169ffffffffffffffffffff81168114610d1057600080fd5b919050565b600080600080600060a08688031215610d2d57600080fd5b610d3686610cf6565b9450602086015193506040860151925060608601519150610d5960808701610cf6565b90509295509295909350565b600060208284031215610d7757600080fd5b815160ff8116811461021857600080fd5b600082610dbe577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dfb57610dfb610c8e565b500290565b60008219821115610e1357610e13610c8e565b50019056fea264697066735822122059153f32ea6a7941ea93a4f279d425068e939ef8451c1e214162e638b09b6ad564736f6c63430008090033";

export class ChainlinkProxyPriceProvider__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    assets: string[],
    sources: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainlinkProxyPriceProvider> {
    return super.deploy(
      assets,
      sources,
      overrides || {}
    ) as Promise<ChainlinkProxyPriceProvider>;
  }
  getDeployTransaction(
    assets: string[],
    sources: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(assets, sources, overrides || {});
  }
  attach(address: string): ChainlinkProxyPriceProvider {
    return super.attach(address) as ChainlinkProxyPriceProvider;
  }
  connect(signer: Signer): ChainlinkProxyPriceProvider__factory {
    return super.connect(signer) as ChainlinkProxyPriceProvider__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkProxyPriceProviderInterface {
    return new utils.Interface(_abi) as ChainlinkProxyPriceProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkProxyPriceProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainlinkProxyPriceProvider;
  }
}
